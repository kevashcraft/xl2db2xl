#!/bin/perl
#
# Name: xl2db2xl
# Description: a perl script to get US Mint Sales Report data in <strike>xls</strike> html table format, store it in an sqlite database, then email a weekly version
# Created by: Kevin Ashcraft
# Created on: 2014-09-17 02:51
#

#
# Planning
# get the <strike>xcell</strike> html file
# store each weeks info with date field
# select info for this week

use warnings;
use strict;
use DBI;
use HTML::TableExtract;
use File::Fetch;
use DateTime;
use Config::Simple;
#use Data::Dumper;
use File::Slurp;
use Excel::Writer::XLSX;
use File::Basename;

# load the config
my $confile = dirname(__FILE__) . '/config';
my $cfg = new Config::Simple($confile);
my $email = $cfg->param('email');
my $url = $cfg->param('url');

# get the date of the most recent Sunday
my $date = DateTime->now();
$date->subtract(days=> ($date->day_of_week) % 7);
# get the file if it doesn't exist
my $filename = 'xl2db2xl-raw-'.$date->ymd.'.xls';
if ( ! -e "/tmp/$filename") {
	$url .= $date->month_name().'%20'.$date->day.',%20'.$date->year;
	my $ff = File::Fetch->new(uri => $url);
	my $where = $ff->fetch( to => '/tmp' ) or die $ff->error;
	rename '/tmp/'.$ff->output_file, "/tmp/$filename";
}

# connect to sqlite db
my $dbh = DBI->connect("DBI:SQLite:dbname=xl2db2xl.db",'','', {RaiseError => 1})
                or die $DBI::errstr;

# create table statement
my $create_stmt = qq(create table if not exists xl2db2xl(
															program VARCHAR(64),
															code VARCHAR(32),
															product VARCHAR(64),
															sales INT,
															srdate DATE,
															availability VARCHAR(32)
															));

# do the table creation															
my $crv = $dbh->do($create_stmt);
if($crv < 0){
        print $DBI::errstr;
}

# open the html table file because life
my $slurp = read_file("/tmp/$filename");
my $te = HTML::TableExtract->new();
$te->parse($slurp);

# parse html table data
my @data;
foreach my $row ($te->rows) {
	push(@data,$row);
}

# check if this date has already been processed
my $stmt = $dbh->prepare("select count(*) from xl2db2xl where srdate = '".$data[3][4]."'");
my $query = $stmt->execute;
my @count = $stmt->fetchrow_array();

# insert the data if it isn't there yet
if($count[0] == 0) {
	# Create the insert statement
	my $insert = $dbh->prepare("insert into xl2db2xl(program,code,product,sales,srdate,availability) VALUES(?,?,?,?,?,?)");
	my $c = 2;
	while($data[$c][0]){
#		print $data[$c][0].$data[$c][1].$data[$c][2].$data[$c][3].$data[$c][4].$data[$c][5]."\n";
		$insert->execute($data[$c][0],$data[$c][1],$data[$c][2],$data[$c][3],$data[$c][4],$data[$c][5]);
		$c++;
	}
}

# Create a new Excel workbook
my $workbook = Excel::Writer::XLSX->new('/tmp/xl2db2xl-'.$date->ymd.'.xlsx');

#  Add and define a format
my $fmt_center = $workbook->add_format(align=>'center');
my $fmt_title = $workbook->add_format(
                    bold => 0,
					underline => 1,
                    merge => 1,
                    size => 12,
                    align => 'center'); # Add a format


# add a worksheet for the current data
my $worksheet = $workbook->add_worksheet($date->ymd);

$worksheet->set_column('A:B', 20);
$worksheet->set_column('C:C', 25);
$worksheet->set_column('D:D', 20);
$worksheet->set_column('E:E', 25);
$worksheet->set_column('F:F', 25);
$worksheet->set_column('G:G', 20);
$worksheet->set_row(0,20);


# write the title row
my $col = 0;
while ($data[0][$col]){
	my $title = $data[0][$col];
	$title =~ s/^\s+|\s+$//g;
	$worksheet->write(0,$col,$title,$fmt_title);
	$col++
}
my $coltol = $col;
# write the rest of the data
my $row = 1;
while ($data[$row][0]){
	$col = 0;
	while ($data[$row][$col]){
	    $worksheet->write($row,$col,$data[$row][$col],$fmt_center);
		$col++;
	}
	$row++;
}

# add extra data
#
my $dates_stmt = $dbh->prepare("select srdate from xl2db2xl group by srdate");
$dates_stmt->execute;
my @dates = $dates_stmt->fetchrow_array;

my $prev_sales_stmt = $dbh->prepare("select sales from xl2db2xl where srdate=? and code=?");

#go to home
$col=0;
$row=0;
# add xl col title
$col=$coltol;
$worksheet->write(0,$col,"Previous Sales",$fmt_title);
$col++;
$worksheet->write(0,$col,"+/-",$fmt_title);
$row++;
#add data
while($data[$row][3]){
	$prev_sales_stmt->execute($dates[0],$data[$row][1]);
	my @prev_sales = $prev_sales_stmt->fetchrow_array();
	if($prev_sales[0]){
		$col=$coltol;
		my $i=$row-1;
		$worksheet->write($row,$col,$prev_sales[0],$fmt_center);
		$col++;
		$prev_sales[0] =~ s/,//;
		$data[$row][3] =~ s/,//;
		my $diff = $data[$row][3] - $prev_sales[0];
		$worksheet->write($row,$col,$diff,$fmt_center);
	} else {
		$worksheet->write($row,$coltol,'NA',$fmt_center);
	}
	$row++;
}

my $codes_stmt = $dbh->prepare("select code from xl2db2xl group by code");
$codes_stmt->execute;

$row=0;
$col=0;
my $prevsheet = $workbook->add_worksheet("Previous");
$prevsheet->write($row,$col,"Program Item",$fmt_center);
$dates_stmt->execute;
while(@dates = $dates_stmt->fetchrow_array){
	$col++;
	$prevsheet->write($row,$col,$dates[0],$fmt_title);
}


while(my @codes = $codes_stmt->fetchrow_array()){
	$row++;
	$col=0;
	$prevsheet->write($row,$col,$codes[0],$fmt_center);
	$col++;
	$dates_stmt->execute;
	while(@dates = $dates_stmt->fetchrow_array){
		$prev_sales_stmt->execute($dates[0],$codes[0]);
		my @prev_sales = $prev_sales_stmt->fetchrow_array();
		$prevsheet->write($row,$col,$prev_sales[0],$fmt_center) if ($prev_sales[0]);
		$col++;
	}
}
$prevsheet->set_column('A:Z', 20);


$workbook->close();


## Upload to Google Drive
use File::Basename;
use Net::Google::Drive::Simple;

my $dirname = dirname(__FILE__);

my $gd = Net::Google::Drive::Simple->new(
										config_file => "$dirname/.gd.yml",
										);
$gd->file_upload('/tmp/xl2db2xl-'.$date->ymd.'.xls','0BxUf5kn-bPJZLTVwSDhPMkZOejg');
